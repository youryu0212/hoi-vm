{"ast":null,"code":"var _jsxFileName = \"/Users/ryuseonghyun/Desktop/codesquad/mission/fe-vm/fe/src/Components/MessageScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport { initAlertMessage } from 'Helper/constant';\nimport { getWonTemplate } from 'Helper/utils';\nimport { AlertMessage, SetAlertMessage } from 'Pages/VendingMachine';\nimport { useCallback, useContext, useEffect, useState } from 'react';\nimport { Message, Screen, ScreenContainer } from './MessageScreen.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessageScreen() {\n  _s();\n\n  const alertMessage = useContext(AlertMessage);\n  const setAlertMessage = useContext(SetAlertMessage);\n  const [messageList, setMessageList] = useState([]);\n  const createNewMessageList = useCallback(message => {\n    const newMessageList = [...messageList, message];\n    return newMessageList;\n  }, [messageList, setAlertMessage]);\n  useEffect(() => {\n    const message = Object.entries(alertMessage).reduce(getAlert, '');\n\n    if (!message) {\n      return;\n    }\n\n    const newMessageList = createNewMessageList(message);\n    setMessageList(newMessageList);\n    setAlertMessage(initAlertMessage);\n  }, [alertMessage]);\n  return /*#__PURE__*/_jsxDEV(ScreenContainer, {\n    children: /*#__PURE__*/_jsxDEV(Screen, {\n      children: messageList && messageList.map((message, idx) => /*#__PURE__*/_jsxDEV(Message, {\n        children: message\n      }, createKey(message, idx), false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 59\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MessageScreen, \"Xw8yFTJlUevZjgXlErLIKUTwYxU=\");\n\n_c = MessageScreen;\n\nconst getAlert = (message, _ref) => {\n  let [alertName, alertAmount] = _ref;\n\n  if (!alertAmount) {\n    return message;\n  }\n\n  return createAlertMessage(alertName, alertAmount);\n};\n\nconst createAlertMessage = (alertName, alertAmount) => {\n  const alerts = {\n    chargeCash: createInvestmentMessage,\n    changeAmount: createChangeMessage,\n    orderTitle: createOrderMessage\n  };\n  return alerts[alertName](alertAmount);\n};\n\nconst createOrderMessage = title => {\n  return `${title}가 주문되었습니다.`;\n};\n\nconst createChangeMessage = amount => {\n  return `거스름돈 ${getWonTemplate(amount)}이 반환되었습니다.`;\n};\n\nconst createInvestmentMessage = amount => {\n  return `자판기에 ${getWonTemplate(amount)}이 투입되었습니다.`;\n};\n\nconst createKey = (message, key) => {\n  return `${message + key}`;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageScreen\");","map":{"version":3,"names":["initAlertMessage","getWonTemplate","AlertMessage","SetAlertMessage","useCallback","useContext","useEffect","useState","Message","Screen","ScreenContainer","MessageScreen","alertMessage","setAlertMessage","messageList","setMessageList","createNewMessageList","message","newMessageList","Object","entries","reduce","getAlert","map","idx","createKey","alertName","alertAmount","createAlertMessage","alerts","chargeCash","createInvestmentMessage","changeAmount","createChangeMessage","orderTitle","createOrderMessage","title","amount","key"],"sources":["/Users/ryuseonghyun/Desktop/codesquad/mission/fe-vm/fe/src/Components/MessageScreen.jsx"],"sourcesContent":["import { initAlertMessage } from 'Helper/constant';\nimport { getWonTemplate } from 'Helper/utils';\nimport { AlertMessage, SetAlertMessage } from 'Pages/VendingMachine';\nimport { useCallback, useContext, useEffect, useState } from 'react';\nimport { Message, Screen, ScreenContainer } from './MessageScreen.styled';\n\nexport default function MessageScreen() {\n  const alertMessage = useContext(AlertMessage);\n  const setAlertMessage = useContext(SetAlertMessage);\n  const [messageList, setMessageList] = useState([]);\n\n  const createNewMessageList = useCallback(\n    (message) => {\n      const newMessageList = [...messageList, message];\n      return newMessageList;\n    },\n    [messageList, setAlertMessage],\n  );\n\n  useEffect(() => {\n    const message = Object.entries(alertMessage).reduce(getAlert, '');\n    if (!message) {\n      return;\n    }\n\n    const newMessageList = createNewMessageList(message);\n    setMessageList(newMessageList);\n    setAlertMessage(initAlertMessage);\n  }, [alertMessage]);\n\n  return (\n    <ScreenContainer>\n      <Screen>\n        {messageList && messageList.map((message, idx) => <Message key={createKey(message, idx)}>{message}</Message>)}\n      </Screen>\n    </ScreenContainer>\n  );\n}\n\nconst getAlert = (message, [alertName, alertAmount]) => {\n  if (!alertAmount) {\n    return message;\n  }\n  return createAlertMessage(alertName, alertAmount);\n};\n\nconst createAlertMessage = (alertName, alertAmount) => {\n  const alerts = {\n    chargeCash: createInvestmentMessage,\n    changeAmount: createChangeMessage,\n    orderTitle: createOrderMessage,\n  };\n  return alerts[alertName](alertAmount);\n};\n\nconst createOrderMessage = (title) => {\n  return `${title}가 주문되었습니다.`;\n};\n\nconst createChangeMessage = (amount) => {\n  return `거스름돈 ${getWonTemplate(amount)}이 반환되었습니다.`;\n};\n\nconst createInvestmentMessage = (amount) => {\n  return `자판기에 ${getWonTemplate(amount)}이 투입되었습니다.`;\n};\n\nconst createKey = (message, key) => {\n  return `${message + key}`;\n};\n"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,iBAAjC;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,sBAA9C;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,QAA7C,QAA6D,OAA7D;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,eAA1B,QAAiD,wBAAjD;;AAEA,eAAe,SAASC,aAAT,GAAyB;EAAA;;EACtC,MAAMC,YAAY,GAAGP,UAAU,CAACH,YAAD,CAA/B;EACA,MAAMW,eAAe,GAAGR,UAAU,CAACF,eAAD,CAAlC;EACA,MAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;EAEA,MAAMS,oBAAoB,GAAGZ,WAAW,CACrCa,OAAD,IAAa;IACX,MAAMC,cAAc,GAAG,CAAC,GAAGJ,WAAJ,EAAiBG,OAAjB,CAAvB;IACA,OAAOC,cAAP;EACD,CAJqC,EAKtC,CAACJ,WAAD,EAAcD,eAAd,CALsC,CAAxC;EAQAP,SAAS,CAAC,MAAM;IACd,MAAMW,OAAO,GAAGE,MAAM,CAACC,OAAP,CAAeR,YAAf,EAA6BS,MAA7B,CAAoCC,QAApC,EAA8C,EAA9C,CAAhB;;IACA,IAAI,CAACL,OAAL,EAAc;MACZ;IACD;;IAED,MAAMC,cAAc,GAAGF,oBAAoB,CAACC,OAAD,CAA3C;IACAF,cAAc,CAACG,cAAD,CAAd;IACAL,eAAe,CAACb,gBAAD,CAAf;EACD,CATQ,EASN,CAACY,YAAD,CATM,CAAT;EAWA,oBACE,QAAC,eAAD;IAAA,uBACE,QAAC,MAAD;MAAA,UACGE,WAAW,IAAIA,WAAW,CAACS,GAAZ,CAAgB,CAACN,OAAD,EAAUO,GAAV,kBAAkB,QAAC,OAAD;QAAA,UAAwCP;MAAxC,GAAcQ,SAAS,CAACR,OAAD,EAAUO,GAAV,CAAvB;QAAA;QAAA;QAAA;MAAA,QAAlC;IADlB;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GA/BuBb,a;;KAAAA,a;;AAiCxB,MAAMW,QAAQ,GAAG,CAACL,OAAD,WAAuC;EAAA,IAA7B,CAACS,SAAD,EAAYC,WAAZ,CAA6B;;EACtD,IAAI,CAACA,WAAL,EAAkB;IAChB,OAAOV,OAAP;EACD;;EACD,OAAOW,kBAAkB,CAACF,SAAD,EAAYC,WAAZ,CAAzB;AACD,CALD;;AAOA,MAAMC,kBAAkB,GAAG,CAACF,SAAD,EAAYC,WAAZ,KAA4B;EACrD,MAAME,MAAM,GAAG;IACbC,UAAU,EAAEC,uBADC;IAEbC,YAAY,EAAEC,mBAFD;IAGbC,UAAU,EAAEC;EAHC,CAAf;EAKA,OAAON,MAAM,CAACH,SAAD,CAAN,CAAkBC,WAAlB,CAAP;AACD,CAPD;;AASA,MAAMQ,kBAAkB,GAAIC,KAAD,IAAW;EACpC,OAAQ,GAAEA,KAAM,YAAhB;AACD,CAFD;;AAIA,MAAMH,mBAAmB,GAAII,MAAD,IAAY;EACtC,OAAQ,QAAOpC,cAAc,CAACoC,MAAD,CAAS,YAAtC;AACD,CAFD;;AAIA,MAAMN,uBAAuB,GAAIM,MAAD,IAAY;EAC1C,OAAQ,QAAOpC,cAAc,CAACoC,MAAD,CAAS,YAAtC;AACD,CAFD;;AAIA,MAAMZ,SAAS,GAAG,CAACR,OAAD,EAAUqB,GAAV,KAAkB;EAClC,OAAQ,GAAErB,OAAO,GAAGqB,GAAI,EAAxB;AACD,CAFD"},"metadata":{},"sourceType":"module"}